#!/usr/bin/env python
# for bash we need to add the following to our .bashrc
# export PYTHONPATH=$PYTHONPATH:$RMANTREE/bin
import getpass
import time, random

# import the python renderman library
import prman


def Cube(ri, width, height, depth):
    w = width / 2.0
    h = height / 2.0
    d = depth / 2.0
    ri.ArchiveRecord(ri.COMMENT, "Cube Generated by Cube Function")
    # rear
    face = [-w, -h, d, -w, h, d, w, -h, d, w, h, d]
    ri.Patch("bilinear", {"P": face})
    # front
    face = [-w, -h, -d, -w, h, -d, w, -h, -d, w, h, -d]
    ri.Patch("bilinear", {"P": face})
    # left
    face = [-w, -h, -d, -w, h, -d, -w, -h, d, -w, h, d]
    ri.Patch("bilinear", {"P": face})
    # right
    face = [w, -h, -d, w, h, -d, w, -h, d, w, h, d]
    ri.Patch("bilinear", {"P": face})
    # bottom
    face = [w, -h, d, w, -h, -d, -w, -h, d, -w, -h, -d]
    ri.Patch("bilinear", {"P": face})
    # top
    face = [w, h, d, w, h, -d, -w, h, d, -w, h, -d]
    ri.Patch("bilinear", {"P": face})
    ri.ArchiveRecord(ri.COMMENT, "--End of Cube Function--")


def spiral(data, detail):
    ri, width, height, depth, StairHeight, RotationAngle = data

    ri.TransformBegin()
    # now the centeral cylinder
    ri.Rotate(-90, 1, 0, 0)
    ri.Cylinder(0.1, StairHeight * height, 1, 360)
    ri.TransformEnd()
    # now we do some calculations and make our spiral
    i = 0.0
    ri.TransformBegin()
    # loop and build the blocks
    while i <= StairHeight:
        Cube(ri, width, height, depth)
        ri.Translate(0, height, 0)
        ri.Rotate(RotationAngle, 0, 1, 0)
        i += height
    ri.TransformEnd()


def Colour(colour):
    ri.Bxdf("PxrDiffuse", "bxdf", {"color diffuseColor": colour})


ri = prman.Ri()  # create an instance of the RenderMan interface
ri.Option("rib", {"string asciistyle": "indented"})

filename = "runprogram.rib"
# this is the begining of the rib archive generation we can only
# make RI calls after this function else we get a core dump
ri.Begin(ri.RENDER)  # filename)

# now we add the display element using the usual elements
# FILENAME DISPLAY Type Output format
ri.Display("runprogram.exr", "framebuffer", "rgba")
# Specify PAL resolution 1:1 pixel Aspect ratio
ri.Format(720, 575, 1)
# now set the projection to perspective
ri.Projection(ri.PERSPECTIVE, {ri.FOV: 60})

ri.Translate(0, 0, 18)

# now we start our world
ri.WorldBegin()


ri.TransformBegin()
Colour([1, 0, 0])
ri.Translate(0, -1, 0)
# param width height depth Case Height Rotation Angle
ri.Procedural((ri, 1, 0.2, 0.35, 20, 5), [-5, 5, -5, 5, -35, 35], spiral, None)
ri.TransformEnd()
ri.TransformBegin()
Colour([1, 1, 1])
ri.Translate(-6, -1, 0)
# param width height depth Case Height Rotation Angle
ri.Procedural((ri, 5, 0.5, 1.5, 10, 15), [-5, 5, -5, 5, -35, 35], spiral, None)

ri.TransformEnd()

ri.TransformBegin()
Colour([1, 0, 1])
ri.Translate(6, -1, 0)
# param width height depth Case Height Rotation Angle
ri.Procedural((ri, 2, 0.3, 0.3, 10, 12), [-5, 5, -5, 5, -35, 35], spiral, None)
ri.TransformEnd()


ri.WorldEnd()
# and finally end the rib file
ri.End()
