#!/usr/bin/python
# for bash we need to add the following to our .bashrc
# export PYTHONPATH=$PYTHONPATH:$RMANTREE/bin   
# import the python renderman library
import prman

def Cube(width,height,depth) :	
	w=width/2.0
	h=height/2.0
	d=depth/2.0
	ri.ArchiveRecord(ri.COMMENT, 'Cube Generated by Cube Function')
	#rear
	face=[-w,-h,d,-w,h,d,w,-h,d,w,h,d]								
	ri.Patch('bilinear',{'P':face})
	#front
	face=[-w,-h,-d,-w,h,-d,w,-h,-d,w,h,-d]								
	ri.Patch('bilinear',{'P':face})
	#left
	face=[-w,-h,-d,-w,h,-d,-w,-h,d,-w,h,d]									
	ri.Patch('bilinear',{'P':face})
	#right
	face=[w,-h,-d,w,h,-d,w,-h,d,w,h,d]								
	ri.Patch('bilinear',{'P':face})
	#bottom
	face=[w,-h,d,w,-h,-d,-w,-h,d,-w,-h,-d]								
	ri.Patch('bilinear',{'P':face})
	#top
	face=[w,h,d,w,h,-d,-w,h,d,-w,h,-d]								
	ri.Patch('bilinear',{'P':face})
	ri.ArchiveRecord(ri.COMMENT, '--End of Cube Function--')


def Scene(ri) :

		
	ri.SolidBegin('intersection')
	
	ri.SolidBegin('primitive')
	ri.TransformBegin()
	#ri.Rotate(-45,1,0,0)
	ri.Translate(0,-0.2,0)
	Cube(.5,.5,.5)
	ri.TransformEnd()
	ri.SolidEnd()


	ri.SolidBegin('union') #start union

	ri.SolidBegin('primitive')    #start big sphere                                                                                                                                                          
	ri.Cylinder(.1,-0.5,0.5,360) 
	ri.SolidEnd() # end big sphere

	ri.SolidBegin('primitive') # start sphere ring       
	ri.TransformBegin()
	ri.Rotate(90,0,1,0)
	ri.Cylinder(.1,-0.5,0.5,360)
	ri.TransformEnd()
	ri.SolidEnd() # end sphere ring

	ri.SolidEnd()
	
	ri.SolidEnd() # end intersection	

ri = prman.Ri() # create an instance of the RenderMan interface
ri.Option('rib', {'string asciistyle': 'indented'})

filename = 'CSGUnion.rib'
# this is the begining of the rib archive generation we can only
# make RI calls after this function else we get a core dump
ri.Begin('__render')

# now we add the display element using the usual elements
# FILENAME DISPLAY Type Output format
ri.Display('CSGUnion.exr', 'it', 'rgba')
# Specify PAL resolution 1:1 pixel Aspect ratio
ri.Format(720,575,1)
# now set the projection to perspective
ri.Projection(ri.PERSPECTIVE,{ri.FOV:50}) 



# now we start our world
ri.WorldBegin()

ri.Translate(0,0,1)
ri.TransformBegin()
ri.Rotate(-35,1,1,0)
Scene(ri)
ri.TransformEnd()

ri.WorldEnd()
# and finally end the rib file
ri.End()
